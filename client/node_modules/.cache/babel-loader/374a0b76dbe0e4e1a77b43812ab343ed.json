{"ast":null,"code":"var _jsxFileName = \"/Users/alvaro/Desktop/SlashDebt/client/src/components/pages/debtList/DebtList.jsx\";\nimport React, { Component } from \"react\";\nimport DebtServices from \"../../../services/debt.services\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Line } from \"react-chartjs-2\";\nimport DebtCard from \"./DebtCard.jsx\";\nconst totalDebt = 0;\n\nclass DebtList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      debts: [],\n      loggedInUser: null,\n      doughnutDebts: [],\n      doughnutDebtsLabels: [],\n      lineDebts: [],\n      lineDebtsLabels: []\n    };\n    this.service = new DebtServices();\n  } // _sumOfDebts(debtsCollection){\n  //           let finalDates = {}\n  //           debtsCollection.forEach((debt, idx) => {\n  //               debt.history.forEach((year, idx) => {\n  //                   let monthsCollection = year.amount\n  //                   for (month in monthsCollection) {\n  //                       let finalMonth = month + year.year\n  //                       let finalAmount = finalDates[finalMonth]\n  //                       let euros = monthsCollection[month]\n  //                       finalAmount ?\n  //                           finalDates[finalMonth] = +finalDates[finalMonth] + euros :\n  //                           finalDates[finalMonth] = \"0\"\n  //                   }\n  //               })\n  //           })\n  //           return finalDates\n  // }\n\n\n  componentDidMount() {\n    this.service.getAllDebts(this.props.loggedInUser._id).then(debts => {\n      // let historicDebts = this._sumOfDebts(debts);\n      let doughnutDebts = [];\n      let doughnutDebtsLabels = []; //let lineDebts = Object.values(historicDebts);\n      //let lineDebtsLabels = Object.keys(historicDebts);\n\n      debts.forEach(debt => {\n        doughnutDebts.push(debt.remaining);\n        doughnutDebtsLabels.push(debt.name);\n      });\n      this.setState({ ...this.state,\n        debts,\n        doughnutDebts,\n        doughnutDebtsLabels //lineDebts: lineDebts,\n        //lineDebtsLabels: lineDebtsLabels\n\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.doughnutDebts);\n    const dataLine = {\n      labels: this.state.lineDebtsLabels,\n      datasets: [{\n        label: \"My First dataset\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(75,192,192,0.4)\",\n        borderColor: \"rgba(75,192,192,1)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: this.state.lineDebts\n      }]\n    };\n    const dataChartDoughnut = {\n      labels: this.state.doughnutDebtsLabels,\n      datasets: [{\n        data: this.state.doughnutDebts,\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#009018\", \"#00c5ff\"],\n        hoverBackgroundColor: [\"#d4395a\", \"#3791ce\", \"#dbaa31\", \"#18872a\", \"#0ca5d2\"]\n      }]\n    };\n    return React.createElement(\"div\", {\n      className: \"dashboard-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Hola estas son todas tus deudas\"), \";\", React.createElement(Doughnut, {\n      data: dataChartDoughnut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(Line, {\n      data: dataLine,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"debt-cards-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.state.debts.map(debt => React.createElement(DebtCard, Object.assign({\n      key: debt._id\n    }, debt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default DebtList;","map":{"version":3,"sources":["/Users/alvaro/Desktop/SlashDebt/client/src/components/pages/debtList/DebtList.jsx"],"names":["React","Component","DebtServices","Doughnut","Line","DebtCard","totalDebt","DebtList","constructor","state","debts","loggedInUser","doughnutDebts","doughnutDebtsLabels","lineDebts","lineDebtsLabels","service","componentDidMount","getAllDebts","props","_id","then","forEach","debt","push","remaining","name","setState","render","console","log","dataLine","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","dataChartDoughnut","hoverBackgroundColor","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport DebtServices from \"../../../services/debt.services\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Line } from \"react-chartjs-2\";\nimport DebtCard from \"./DebtCard.jsx\";\n\nconst totalDebt = 0;\n\nclass DebtList extends Component {\n  state = {\n    debts: [],\n    loggedInUser: null,\n    doughnutDebts: [],\n    doughnutDebtsLabels: [],\n    lineDebts: [],\n    lineDebtsLabels: []\n  };\n\n  constructor() {\n    super();\n    this.service = new DebtServices();\n  }\n\n  // _sumOfDebts(debtsCollection){\n  //           let finalDates = {}\n  //           debtsCollection.forEach((debt, idx) => {\n  //               debt.history.forEach((year, idx) => {\n  //                   let monthsCollection = year.amount\n  //                   for (month in monthsCollection) {\n  //                       let finalMonth = month + year.year\n  //                       let finalAmount = finalDates[finalMonth]\n  //                       let euros = monthsCollection[month]\n  //                       finalAmount ?\n  //                           finalDates[finalMonth] = +finalDates[finalMonth] + euros :\n  //                           finalDates[finalMonth] = \"0\"\n  //                   }\n  //               })\n  //           })\n\n  //           return finalDates\n  // }\n\n  componentDidMount() {\n    this.service.getAllDebts(this.props.loggedInUser._id).then(debts => {\n      // let historicDebts = this._sumOfDebts(debts);\n      let doughnutDebts = [];\n      let doughnutDebtsLabels = [];\n     //let lineDebts = Object.values(historicDebts);\n      //let lineDebtsLabels = Object.keys(historicDebts);\n\n      debts.forEach(debt => {\n        doughnutDebts.push(debt.remaining);\n        doughnutDebtsLabels.push(debt.name);\n      });\n      this.setState({\n        ...this.state,\n        debts,\n        doughnutDebts,\n        doughnutDebtsLabels,\n        //lineDebts: lineDebts,\n        //lineDebtsLabels: lineDebtsLabels\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.doughnutDebts);\n\n    const dataLine = {\n      labels: this.state.lineDebtsLabels,\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: \"rgba(75,192,192,0.4)\",\n          borderColor: \"rgba(75,192,192,1)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgba(75,192,192,1)\",\n          pointBackgroundColor: \"#fff\",\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n          pointHoverBorderColor: \"rgba(220,220,220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: this.state.lineDebts\n        }\n      ]\n    };\n\n    const dataChartDoughnut = {\n      labels: this.state.doughnutDebtsLabels,\n      datasets: [\n        {\n          data: this.state.doughnutDebts,\n          backgroundColor: [\n            \"#FF6384\",\n            \"#36A2EB\",\n            \"#FFCE56\",\n            \"#009018\",\n            \"#00c5ff\"\n          ],\n          hoverBackgroundColor: [\n            \"#d4395a\",\n            \"#3791ce\",\n            \"#dbaa31\",\n            \"#18872a\",\n            \"#0ca5d2\"\n          ]\n        }\n      ]\n    };\n    return (\n      <div className=\"dashboard-container\">\n        <div>Hola estas son todas tus deudas</div>;\n        <Doughnut data={dataChartDoughnut}></Doughnut>\n        <Line data={dataLine}></Line>\n        <div id=\"debt-cards-container\">\n          {this.state.debts.map(debt => (\n            <DebtCard key={debt._id} {...debt} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DebtList;\n"]},"metadata":{},"sourceType":"module"}