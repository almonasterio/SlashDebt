{"ast":null,"code":"var _jsxFileName = \"/Users/alvaro/Desktop/SlashDebt/client/src/App.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport CoastersList from './components/pages/coasterList/CoasterList';\nimport CoasterDetails from './components/pages/coasterDetails/CoasterDetails';\nimport NavBar from './components/ui/NavBar';\nimport Signup from './components/pages/auth/signup/Signup';\nimport Profile from './components/pages/profile/Profile';\nimport Login from './components/pages/auth/login/Login';\nimport AuthServices from './services/auth.services';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.componentDidUpdate = (prevProps, prevState) => console.log(\"El estado de App se ha actualizado:\", this.state);\n\n    this.componentDidMount = () => this.fetchUser();\n\n    this.setTheUser = userObj => this.setState({\n      loggedInUser: userObj\n    });\n\n    this.fetchUser = () => {\n      this.services.loggedin().then(theUser => this.setState({\n        loggedInUser: theUser\n      })).catch(() => this.setState({\n        loggedInUser: false\n      }));\n    };\n\n    this.state = {\n      loggedInUser: false\n    };\n    this.services = new AuthServices();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(NavBar, {\n      setTheUser: this.setTheUser,\n      loggedInUser: this.state.loggedInUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(CoastersList, {\n        loggedInUser: this.state.loggedInUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/detalles/:id\",\n      render: props => React.createElement(CoasterDetails, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      render: () => React.createElement(Signup, {\n        setTheUser: this.setTheUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      render: props => React.createElement(Login, Object.assign({\n        setTheUser: this.setTheUser\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/profile\",\n      render: () => this.state.loggedInUser ? React.createElement(Profile, {\n        loggedInUser: this.state.loggedInUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }) : React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alvaro/Desktop/SlashDebt/client/src/App.js"],"names":["React","Component","Switch","Route","Redirect","CoastersList","CoasterDetails","NavBar","Signup","Profile","Login","AuthServices","App","constructor","componentDidUpdate","prevProps","prevState","console","log","state","componentDidMount","fetchUser","setTheUser","userObj","setState","loggedInUser","services","loggedin","then","theUser","catch","render","props"],"mappings":"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","sourcesContent":["import React, {\n  Component\n} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\n\nimport {\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom'\n\nimport CoastersList from './components/pages/coasterList/CoasterList'\nimport CoasterDetails from './components/pages/coasterDetails/CoasterDetails'\nimport NavBar from './components/ui/NavBar'\n\nimport Signup from './components/pages/auth/signup/Signup'\nimport Profile from './components/pages/profile/Profile'\nimport Login from './components/pages/auth/login/Login'\n\nimport AuthServices from './services/auth.services'\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      loggedInUser: false\n    }\n    this.services = new AuthServices()\n  }\n\n\n  componentDidUpdate = (prevProps, prevState) => console.log(\"El estado de App se ha actualizado:\", this.state)\n  componentDidMount = () => this.fetchUser()\n\n\n  setTheUser = userObj => this.setState({\n    loggedInUser: userObj\n  })\n  fetchUser = () => {\n    this.services.loggedin()\n      .then(theUser => this.setState({\n        loggedInUser: theUser\n      }))\n      .catch(() => this.setState({\n        loggedInUser: false\n      }))\n  }\n\n\n  render() {\n\n      return ( <>\n        <NavBar setTheUser={this.setTheUser} loggedInUser={this.state.loggedInUser} />\n\n        <Switch>\n          <Route exact path=\"/\" render={() => <CoastersList loggedInUser={this.state.loggedInUser} />} />\n          <Route path=\"/detalles/:id\" render={props => <CoasterDetails {...props} />} />\n          <Route path=\"/signup\" render={() => <Signup setTheUser={this.setTheUser} />} />\n          <Route path=\"/login\" render={props => <Login setTheUser={this.setTheUser} {...props} />} />\n          <Route path=\"/profile\" render={() => this.state.loggedInUser ? <Profile loggedInUser={this.state.loggedInUser} /> : <Redirect to=\"/\" />} />\n        </Switch>\n      </>\n\n    )\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}