{"ast":null,"code":"var _jsxFileName = \"/Users/alvaro/Desktop/SlashDebt/client/src/App.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport CoastersList from './components/pages/coasterList/CoasterList';\nimport CoasterDetails from './components/pages/coasterDetails/CoasterDetails';\nimport NavBar from './components/ui/NavBar';\nimport Signup from './components/pages/auth/signup/Signup';\nimport Profile from './components/pages/profile/Profile';\nimport Login from './components/pages/auth/login/Login';\nimport AuthServices from './services/auth.services';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.componentDidUpdate = (prevProps, prevState) => console.log(\"El estado de App se ha actualizado:\", this.state);\n\n    this.componentDidMount = () => this.fetchUser();\n\n    this.setTheUser = userObj => this.setState({\n      loggedInUser: userObj\n    });\n\n    this.fetchUser = () => {\n      this.services.loggedin().then(theUser => this.setState({\n        loggedInUser: theUser\n      })).catch(() => this.setState({\n        loggedInUser: false\n      }));\n    };\n\n    this.state = {\n      loggedInUser: false\n    };\n    this.services = new AuthServices();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(NavBar, {\n      setTheUser: this.setTheUser,\n      loggedInUser: this.state.loggedInUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(CoastersList, {\n        loggedInUser: this.state.loggedInUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/detalles/:id\",\n      render: props => React.createElement(CoasterDetails, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      render: () => React.createElement(Signup, {\n        setTheUser: this.setTheUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      render: props => React.createElement(Login, Object.assign({\n        setTheUser: this.setTheUser\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/profile\",\n      render: () => this.state.loggedInUser ? React.createElement(Profile, {\n        loggedInUser: this.state.loggedInUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }) : React.createElement(Redirect, {\n        to: \"/ \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), \" \"), \" \");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alvaro/Desktop/SlashDebt/client/src/App.js"],"names":["React","Component","Switch","Route","Redirect","CoastersList","CoasterDetails","NavBar","Signup","Profile","Login","AuthServices","App","constructor","componentDidUpdate","prevProps","prevState","console","log","state","componentDidMount","fetchUser","setTheUser","userObj","setState","loggedInUser","services","loggedin","then","theUser","catch","render","props"],"mappings":"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","sourcesContent":["import React, {\n  Component\n} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\n\nimport {\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom'\n\nimport CoastersList from './components/pages/coasterList/CoasterList'\nimport CoasterDetails from './components/pages/coasterDetails/CoasterDetails'\nimport NavBar from './components/ui/NavBar'\n\nimport Signup from './components/pages/auth/signup/Signup'\nimport Profile from './components/pages/profile/Profile'\nimport Login from './components/pages/auth/login/Login'\n\nimport AuthServices from './services/auth.services'\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      loggedInUser: false\n    }\n    this.services = new AuthServices()\n  }\n\n\n  componentDidUpdate = (prevProps, prevState) => console.log(\"El estado de App se ha actualizado:\", this.state)\n  componentDidMount = () => this.fetchUser()\n\n\n  setTheUser = userObj => this.setState({\n    loggedInUser: userObj\n  })\n  fetchUser = () => {\n    this.services.loggedin()\n      .then(theUser => this.setState({\n        loggedInUser: theUser\n      }))\n      .catch(() => this.setState({\n        loggedInUser: false\n      }))\n  }\n\n\n  render() {\n\n      return ( < >\n          <\n          NavBar setTheUser = {\n            this.setTheUser\n          }\n          loggedInUser = {\n            this.state.loggedInUser\n          }\n          />\n\n          <\n          Switch >\n          <\n          Route exact path = \"/\"\n          render = {\n            () => < CoastersList loggedInUser = {\n              this.state.loggedInUser\n            }\n            />} / >\n            <\n            Route path = \"/detalles/:id\"\n            render = {\n              props => < CoasterDetails {\n                ...props\n              }\n              />} / >\n              <\n              Route path = \"/signup\"\n              render = {\n                () => < Signup setTheUser = {\n                  this.setTheUser\n                }\n                />} / >\n                <\n                Route path = \"/login\"\n                render = {\n                  props => < Login setTheUser = {\n                    this.setTheUser\n                  } {\n                    ...props\n                  }\n                  />} / >\n                  <\n                  Route path = \"/profile\"\n                  render = {\n                    () => this.state.loggedInUser ? < Profile loggedInUser = {\n                      this.state.loggedInUser\n                    }\n                    /> : <Redirect to=\"/\n                    \" />} /> <\n                    /Switch> <\n                    />\n\n                  )\n                }\n              }\n\n              export default App"]},"metadata":{},"sourceType":"module"}