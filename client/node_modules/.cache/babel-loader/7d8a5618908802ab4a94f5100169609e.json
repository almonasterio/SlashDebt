{"ast":null,"code":"var _jsxFileName = \"/Users/alvaro/Desktop/SlashDebt/client/src/components/pages/debtList/DebtList.jsx\";\nimport React, { Component } from \"react\";\nimport DebtServices from \"../../../services/debt.services\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Line } from \"react-chartjs-2\";\nconst totalDebt = 0;\n\nclass DebtList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      debts: [],\n      loggedInUser: null,\n      doughnutDebts: [],\n      doughnutDebtsLabels: [],\n      lineDebts: [],\n      lineDebtsLabels: []\n    };\n    this.service = new DebtServices();\n  }\n\n  componentDidMount() {\n    this.service.getAllDebts(this.props.loggedInUser._id).then(debts => {\n      console.log(\"entra\");\n      console.log(debts);\n      let doughnutDebts = [];\n      let doughnutDebtsLabels = [];\n      let lineDebts = [];\n      let lineDebtsLabels = [];\n      debts.forEach(debt => {\n        console.log(\"debtremaining\");\n        console.log(debt.remaining);\n        lineDebts.push(debt.history[2018]);\n        doughnutDebts.push(debt.remaining);\n        doughnutDebtsLabels.push(debt.name);\n      });\n      console.log(\"totalDebt\");\n      console.log(doughnutDebts);\n      debts.forEach(debt => {\n        debt.history.forEach(yr => {\n          yr2018debts.push(Object.keys(yr.amount));\n          yr2018debtLabels.push(Object.values(yr.amount));\n        });\n      });\n      console.log(\"2018 debts\");\n      console.log(yr2018debts.flat());\n      console.log(yr2018debtLabels.flat());\n      this.setState({ ...this.state,\n        debts,\n        doughnutDebts,\n        doughnutDebtsLabels\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.doughnutDebts);\n    const dataLine = {\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n      datasets: [{\n        label: \"My First dataset\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(75,192,192,0.4)\",\n        borderColor: \"rgba(75,192,192,1)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: [65, 59, 80, 81, 56, 55, 40]\n      }]\n    };\n    const dataChartDoughnut = {\n      labels: this.state.doughnutDebtsLabels,\n      datasets: [{\n        data: this.state.doughnutDebts,\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#009018\", \"#00c5ff\"],\n        hoverBackgroundColor: [\"#d4395a\", \"#3791ce\", \"#dbaa31\", \"#18872a\", \"#0ca5d2\"]\n      }]\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Hola estas son todas tus deudas\"), \";\", React.createElement(Doughnut, {\n      data: dataChartDoughnut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Line, {\n      data: dataLine,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), this.state.debts.map((debt, idx) => React.createElement(\"span\", {\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, debt.interestRate)));\n  }\n\n}\n\nexport default DebtList;","map":{"version":3,"sources":["/Users/alvaro/Desktop/SlashDebt/client/src/components/pages/debtList/DebtList.jsx"],"names":["React","Component","DebtServices","Doughnut","Line","totalDebt","DebtList","constructor","state","debts","loggedInUser","doughnutDebts","doughnutDebtsLabels","lineDebts","lineDebtsLabels","service","componentDidMount","getAllDebts","props","_id","then","console","log","forEach","debt","remaining","push","history","name","yr","yr2018debts","Object","keys","amount","yr2018debtLabels","values","flat","setState","render","dataLine","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","dataChartDoughnut","hoverBackgroundColor","map","idx","interestRate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DebtServices from \"../../../services/debt.services\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Line } from \"react-chartjs-2\";\n\nconst totalDebt = 0;\n\nclass DebtList extends Component {\n  state = {\n    debts: [],\n    loggedInUser: null,\n    doughnutDebts: [],\n    doughnutDebtsLabels: [],\n    lineDebts: [],\n    lineDebtsLabels: []\n  };\n\n  constructor() {\n    super();\n    this.service = new DebtServices();\n  }\n\n  componentDidMount() {\n    this.service.getAllDebts(this.props.loggedInUser._id).then(debts => {\n      console.log(\"entra\");\n      console.log(debts);\n      let doughnutDebts = [];\n      let doughnutDebtsLabels = [];\n\n      let lineDebts = [];\n      let lineDebtsLabels = [];\n      debts.forEach(debt => {\n        console.log(\"debtremaining\");\n        console.log(debt.remaining);\n        lineDebts.push(debt.history[2018]);\n        doughnutDebts.push(debt.remaining);\n        doughnutDebtsLabels.push(debt.name);\n      });\n      console.log(\"totalDebt\");\n      console.log(doughnutDebts);\n\ndebts.forEach(debt => {\n  debt.history.forEach(yr => {\n    yr2018debts.push(Object.keys(yr.amount));\n    yr2018debtLabels.push(Object.values(yr.amount));\n  });\n});\nconsole.log(\"2018 debts\");\nconsole.log(yr2018debts.flat());\nconsole.log(yr2018debtLabels.flat());\n\n      this.setState({\n        ...this.state,\n        debts,\n        doughnutDebts,\n        doughnutDebtsLabels\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.doughnutDebts);\n\n    const dataLine = {\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: \"rgba(75,192,192,0.4)\",\n          borderColor: \"rgba(75,192,192,1)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgba(75,192,192,1)\",\n          pointBackgroundColor: \"#fff\",\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n          pointHoverBorderColor: \"rgba(220,220,220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [65, 59, 80, 81, 56, 55, 40]\n        }\n      ]\n    };\n\n    const dataChartDoughnut = {\n      labels: this.state.doughnutDebtsLabels,\n      datasets: [\n        {\n          data: this.state.doughnutDebts,\n          backgroundColor: [\n            \"#FF6384\",\n            \"#36A2EB\",\n            \"#FFCE56\",\n            \"#009018\",\n            \"#00c5ff\"\n          ],\n          hoverBackgroundColor: [\n            \"#d4395a\",\n            \"#3791ce\",\n            \"#dbaa31\",\n            \"#18872a\",\n            \"#0ca5d2\"\n          ]\n        }\n      ]\n    };\n    return (\n      <div>\n        <div>Hola estas son todas tus deudas</div>;\n        <Doughnut data={dataChartDoughnut}></Doughnut>\n        <Line data={dataLine}></Line>\n        {this.state.debts.map((debt, idx) => (\n          <span key={idx}>{debt.interestRate}</span>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default DebtList;\n"]},"metadata":{},"sourceType":"module"}