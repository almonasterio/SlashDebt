{"ast":null,"code":"var _jsxFileName = \"/Users/alvaro/Desktop/SlashDebt/client/src/components/pages/debtList/DebtList.jsx\";\nimport React, { Component } from \"react\";\nimport DebtServices from \"../../../services/debt.services\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Line } from \"react-chartjs-2\";\nimport DebtCard from \"./DebtCard.jsx\";\nconst totalDebt = 0;\n\nclass DebtList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      debts: [],\n      loggedInUser: null,\n      doughnutDebts: [],\n      doughnutDebtsLabels: [],\n      lineDebts: [],\n      lineDebtsLabels: []\n    };\n    this.service = new DebtServices();\n  }\n\n  componentDidMount() {\n    this.service.getAllDebts(this.props.loggedInUser._id).then(debts => {\n      console.log(\"entra\");\n      console.log(debts);\n      let doughnutDebts = [];\n      let doughnutDebtsLabels = [];\n      let lineDebts = [];\n      let lineDebtsLabels = [];\n      debts.forEach(debt => {\n        console.log(\"debtremaining\");\n        console.log(debt.remaining);\n        lineDebts.push(debt.history[2018]);\n        doughnutDebts.push(debt.remaining);\n        doughnutDebtsLabels.push(debt.name);\n        debts.forEach(debt => {\n          debt.history.forEach(yr => {\n            lineDebtsLabels.push(Object.keys(yr.amount));\n            lineDebts.push(Object.values(yr.amount));\n          });\n        });\n        lineDebts = lineDebts.flat().filter(e => e !== undefined);\n        lineDebtsLabels = lineDebtsLabels.flat();\n      });\n      console.log(\"labelsdebts\");\n      console.log(lineDebts);\n      console.log(lineDebtsLabels); // console.log(\"totalDebt\");\n      // console.log(doughnutDebts);\n\n      this.setState({ ...this.state,\n        debts,\n        doughnutDebts,\n        doughnutDebtsLabels,\n        lineDebts: lineDebts.flat(),\n        lineDebtsLabels: lineDebtsLabels.flat()\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.doughnutDebts);\n    const dataLine = {\n      labels: this.state.lineDebtsLabels,\n      datasets: [{\n        label: \"My First dataset\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(75,192,192,0.4)\",\n        borderColor: \"rgba(75,192,192,1)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: this.state.lineDebts\n      }]\n    };\n    const dataChartDoughnut = {\n      labels: this.state.doughnutDebtsLabels,\n      datasets: [{\n        data: this.state.doughnutDebts,\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#009018\", \"#00c5ff\"],\n        hoverBackgroundColor: [\"#d4395a\", \"#3791ce\", \"#dbaa31\", \"#18872a\", \"#0ca5d2\"]\n      }]\n    };\n    return React.createElement(\"div\", {\n      className: \"dashboard-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.state.debts.map(debt => React.createElement(DebtCard, Object.assign({\n      key: debt._id\n    }, debt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Hola estas son todas tus deudas\"), \";\", React.createElement(Doughnut, {\n      data: dataChartDoughnut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Line, {\n      data: dataLine,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default DebtList;","map":{"version":3,"sources":["/Users/alvaro/Desktop/SlashDebt/client/src/components/pages/debtList/DebtList.jsx"],"names":["React","Component","DebtServices","Doughnut","Line","DebtCard","totalDebt","DebtList","constructor","state","debts","loggedInUser","doughnutDebts","doughnutDebtsLabels","lineDebts","lineDebtsLabels","service","componentDidMount","getAllDebts","props","_id","then","console","log","forEach","debt","remaining","push","history","name","yr","Object","keys","amount","values","flat","filter","e","undefined","setState","render","dataLine","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","dataChartDoughnut","hoverBackgroundColor","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport DebtServices from \"../../../services/debt.services\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Line } from \"react-chartjs-2\";\nimport DebtCard from \"./DebtCard.jsx\";\n\nconst totalDebt = 0;\n\nclass DebtList extends Component {\n  state = {\n    debts: [],\n    loggedInUser: null,\n    doughnutDebts: [],\n    doughnutDebtsLabels: [],\n    lineDebts: [],\n    lineDebtsLabels: []\n  };\n\n  constructor() {\n    super();\n    this.service = new DebtServices();\n  }\n\n  componentDidMount() {\n    this.service.getAllDebts(this.props.loggedInUser._id).then(debts => {\n      console.log(\"entra\");\n      console.log(debts);\n      let doughnutDebts = [];\n      let doughnutDebtsLabels = [];\n\n      let lineDebts = [];\n      let lineDebtsLabels = [];\n      debts.forEach(debt => {\n        console.log(\"debtremaining\");\n        console.log(debt.remaining);\n        lineDebts.push(debt.history[2018]);\n        doughnutDebts.push(debt.remaining);\n        doughnutDebtsLabels.push(debt.name);\n\n        debts.forEach(debt => {\n          debt.history.forEach(yr => {\n            lineDebtsLabels.push(Object.keys(yr.amount));\n            lineDebts.push(Object.values(yr.amount));\n          });\n        });\n\n        lineDebts = lineDebts.flat().filter(e => e !== undefined);\n        lineDebtsLabels = lineDebtsLabels.flat();\n      });\n      console.log(\"labelsdebts\");\n      console.log(lineDebts);\n      console.log(lineDebtsLabels);\n      // console.log(\"totalDebt\");\n      // console.log(doughnutDebts);\n\n      this.setState({\n        ...this.state,\n        debts,\n        doughnutDebts,\n        doughnutDebtsLabels,\n        lineDebts: lineDebts.flat(),\n        lineDebtsLabels: lineDebtsLabels.flat()\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.doughnutDebts);\n\n    const dataLine = {\n      labels: this.state.lineDebtsLabels,\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: \"rgba(75,192,192,0.4)\",\n          borderColor: \"rgba(75,192,192,1)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgba(75,192,192,1)\",\n          pointBackgroundColor: \"#fff\",\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n          pointHoverBorderColor: \"rgba(220,220,220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: this.state.lineDebts\n        }\n      ]\n    };\n\n    const dataChartDoughnut = {\n      labels: this.state.doughnutDebtsLabels,\n      datasets: [\n        {\n          data: this.state.doughnutDebts,\n          backgroundColor: [\n            \"#FF6384\",\n            \"#36A2EB\",\n            \"#FFCE56\",\n            \"#009018\",\n            \"#00c5ff\"\n          ],\n          hoverBackgroundColor: [\n            \"#d4395a\",\n            \"#3791ce\",\n            \"#dbaa31\",\n            \"#18872a\",\n            \"#0ca5d2\"\n          ]\n        }\n      ]\n    };\n    return (\n      <div className=\"dashboard-container\">\n        <div>\n          {this.state.debts.map(debt => (\n            <DebtCard key={debt._id} {...debt} />\n          ))}\n        </div>\n        <div>Hola estas son todas tus deudas</div>;\n        <Doughnut data={dataChartDoughnut}></Doughnut>\n        <Line data={dataLine}></Line>\n      </div>\n    );\n  }\n}\n\nexport default DebtList;\n"]},"metadata":{},"sourceType":"module"}