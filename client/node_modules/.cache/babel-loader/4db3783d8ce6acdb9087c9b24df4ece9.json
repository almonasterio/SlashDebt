{"ast":null,"code":"var _jsxFileName = \"/Users/alvaro/Desktop/SlashDebt/client/src/App.jsx\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport CoastersList from \"./components/pages/coasterList/CoasterList\";\nimport CoasterDetails from \"./components/pages/coasterDetails/CoasterDetails\";\nimport NavBar from \"./components/ui/NavBar\";\nimport Signup from \"./components/pages/auth/signup/Signup\";\nimport Profile from \"./components/pages/profile/Profile\";\nimport Login from \"./components/pages/auth/login/Login\";\nimport AuthServices from \"./services/auth.services\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Line } from \"react-chartjs-2\";\nlet json = {\n  // \"2018\": {\n  //         \"January\": 1500,\n  //         \"February\": 1500,\n  //         \"March\": 1400,\n  //         \"April\": 1200,\n  //         \"May\": 1200,\n  //         \"June\": 1100,\n  //         \"July\": 1400,\n  //         \"August\": 1300,\n  //         \"September\": 1100,\n  //         \"November\": 900,\n  //         \"December\": 700\n  //         },\n  \"2019\": {\n    January: 1500,\n    February: 1500,\n    March: 1400,\n    April: 1200,\n    May: 1200,\n    June: 1100,\n    July: 1400,\n    August: 1300,\n    September: 1100,\n    November: 900,\n    December: 700\n  }\n};\nconst data2 = {\n  labels: months,\n  datasets: [{\n    label: \"My First dataset\",\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: \"rgba(75,192,192,0.4)\",\n    borderColor: \"rgba(75,192,192,1)\",\n    borderCapStyle: \"butt\",\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: \"miter\",\n    pointBorderColor: \"rgba(75,192,192,1)\",\n    pointBackgroundColor: \"#fff\",\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n    pointHoverBorderColor: \"rgba(220,220,220,1)\",\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: [65, 59, 80, 81, 56, 55, 40]\n  }]\n};\nconst data = {\n  labels: [\"Red\", \"Green\", \"Yellow\"],\n  datasets: [{\n    data: [300, 50, 100],\n    backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n    hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n  }]\n};\nlet arrData = [json];\nlet months = Object.keys(json[\"2019\"]);\nlet monthlyDebts = Object.values(json[\"2019\"]);\nconsole.log(months);\nconsole.log(monthlyDebts);\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.componentDidUpdate = (prevProps, prevState) => console.log(\"El estado de App se ha actualizado:\", this.state);\n\n    this.componentDidMount = () => this.fetchUser();\n\n    this.setTheUser = userObj => this.setState({\n      loggedInUser: userObj\n    });\n\n    this.fetchUser = () => {\n      this.services.loggedin().then(theUser => this.setState({\n        loggedInUser: theUser\n      })).catch(() => this.setState({\n        loggedInUser: false\n      }));\n    };\n\n    this.state = {\n      loggedInUser: false\n    };\n    this.services = new AuthServices();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(NavBar, {\n      setTheUser: this.setTheUser,\n      loggedInUser: this.state.loggedInUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Doughnut, {\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Line, {\n      data: data2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(CoastersList, {\n        loggedInUser: this.state.loggedInUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/detalles/:id\",\n      render: props => React.createElement(CoasterDetails, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      render: () => React.createElement(Signup, {\n        setTheUser: this.setTheUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      render: props => React.createElement(Login, Object.assign({\n        setTheUser: this.setTheUser\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/profile\",\n      render: () => this.state.loggedInUser ? React.createElement(Profile, {\n        loggedInUser: this.state.loggedInUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }) : React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alvaro/Desktop/SlashDebt/client/src/App.jsx"],"names":["React","Component","Switch","Route","Redirect","CoastersList","CoasterDetails","NavBar","Signup","Profile","Login","AuthServices","Doughnut","Line","json","January","February","March","April","May","June","July","August","September","November","December","data2","labels","months","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","hoverBackgroundColor","arrData","Object","keys","monthlyDebts","values","console","log","App","constructor","componentDidUpdate","prevProps","prevState","state","componentDidMount","fetchUser","setTheUser","userObj","setState","loggedInUser","services","loggedin","then","theUser","catch","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./App.css\";\n\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport CoastersList from \"./components/pages/coasterList/CoasterList\";\nimport CoasterDetails from \"./components/pages/coasterDetails/CoasterDetails\";\nimport NavBar from \"./components/ui/NavBar\";\n\nimport Signup from \"./components/pages/auth/signup/Signup\";\nimport Profile from \"./components/pages/profile/Profile\";\nimport Login from \"./components/pages/auth/login/Login\";\n\nimport AuthServices from \"./services/auth.services\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Line } from \"react-chartjs-2\";\n\n let json = {\n   // \"2018\": {\n   //         \"January\": 1500,\n   //         \"February\": 1500,\n   //         \"March\": 1400,\n   //         \"April\": 1200,\n   //         \"May\": 1200,\n   //         \"June\": 1100,\n   //         \"July\": 1400,\n   //         \"August\": 1300,\n   //         \"September\": 1100,\n   //         \"November\": 900,\n   //         \"December\": 700\n   //         },\n   \"2019\": {\n     January: 1500,\n     February: 1500,\n     March: 1400,\n     April: 1200,\n     May: 1200,\n     June: 1100,\n     July: 1400,\n     August: 1300,\n     September: 1100,\n     November: 900,\n     December: 700\n   }\n };\n\n const data2 = {\n   labels: months,\n   datasets: [\n     {\n       label: \"My First dataset\",\n       fill: false,\n       lineTension: 0.1,\n       backgroundColor: \"rgba(75,192,192,0.4)\",\n       borderColor: \"rgba(75,192,192,1)\",\n       borderCapStyle: \"butt\",\n       borderDash: [],\n       borderDashOffset: 0.0,\n       borderJoinStyle: \"miter\",\n       pointBorderColor: \"rgba(75,192,192,1)\",\n       pointBackgroundColor: \"#fff\",\n       pointBorderWidth: 1,\n       pointHoverRadius: 5,\n       pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n       pointHoverBorderColor: \"rgba(220,220,220,1)\",\n       pointHoverBorderWidth: 2,\n       pointRadius: 1,\n       pointHitRadius: 10,\n       data: [65, 59, 80, 81, 56, 55, 40]\n     }\n   ]\n };\n const data = {\n   labels: [\"Red\", \"Green\", \"Yellow\"],\n   datasets: [\n     {\n       data: [300, 50, 100],\n       backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n       hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n     }\n   ]\n };\n let arrData = [json];\n\n let months = Object.keys(json[\"2019\"]);\n let monthlyDebts = Object.values(json[\"2019\"]);\n console.log(months);\n console.log(monthlyDebts);\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loggedInUser: false\n    };\n    this.services = new AuthServices();\n  }\n\n  componentDidUpdate = (prevProps, prevState) =>\n    console.log(\"El estado de App se ha actualizado:\", this.state);\n  componentDidMount = () => this.fetchUser();\n\n  setTheUser = userObj =>\n    this.setState({\n      loggedInUser: userObj\n    });\n  fetchUser = () => {\n    this.services\n      .loggedin()\n      .then(theUser =>\n        this.setState({\n          loggedInUser: theUser\n        })\n      )\n      .catch(() =>\n        this.setState({\n          loggedInUser: false\n        })\n      );\n  };\n\n  render() {\n    return (\n      <>\n        <NavBar\n          setTheUser={this.setTheUser}\n          loggedInUser={this.state.loggedInUser}\n        />\n\n        <Doughnut data={data}></Doughnut>\n        <Line data={data2}></Line>\n\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <CoastersList loggedInUser={this.state.loggedInUser} />\n            )}\n          />\n          <Route\n            path=\"/detalles/:id\"\n            render={props => <CoasterDetails {...props} />}\n          />\n          <Route\n            path=\"/signup\"\n            render={() => <Signup setTheUser={this.setTheUser} />}\n          />\n          <Route\n            path=\"/login\"\n            render={props => <Login setTheUser={this.setTheUser} {...props} />}\n          />\n          <Route\n            path=\"/profile\"\n            render={() =>\n              this.state.loggedInUser ? (\n                <Profile loggedInUser={this.state.loggedInUser} />\n              ) : (\n                <Redirect to=\"/\" />\n              )\n            }\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}